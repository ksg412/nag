<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
		xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
		xmlns:context="http://www.springframework.org/schema/context"
		xmlns:mvc="http://www.springframework.org/schema/mvc"
		xmlns:tx="http://www.springframework.org/schema/tx"
		xsi:schemaLocation="
			 http://www.springframework.org/schema/beans
			 http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
		     http://www.springframework.org/schema/context 
		     http://www.springframework.org/schema/context/spring-context-4.0.xsd
		     http://www.springframework.org/schema/mvc 
		     http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd
		     http://www.springframework.org/schema/tx 
		 	http://www.springframework.org/schema/tx/spring-tx-4.0.xsd">

	
	<!-- 1.  PropertyPlaceholderConfigurer .. property 파일 사용가능하게-->
	<bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="location">
			<value>classpath:conf/jdbc.properties</value>
		</property>
	</bean>
	
	<!-- 2. dataSource (mysql) -->
<!-- 	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close"> -->
<!-- 		<property name="driverClassName" value="${db.Driver}"/> -->
<!-- 		<property name="url" value="${db.Url}"/> -->
<!-- 		<property name="username" value="${db.Username}"/> -->
<!-- 		<property name="password" value="${db.Password}"/> -->
<!-- 	</bean> -->

	<!-- 3. ibatis 관련 정보 --> 
<!-- 	<bean id="sqlMapClient" class="org.springframework.orm.ibatis.SqlMapClientFactoryBean"> -->
<!-- 		<property name="configLocation"   value="classpath:conf/ibatis/SqlMapConfig.xml"/> -->
<!-- 		<property name="dataSource" ref="dataSource"/> -->
<!-- 	</bean> -->
	
	<!-- 4. mybatis 관련 정보 -->
	<!-- 데이터 접근 객체인 DAO를 만든것보다 직접 SqlSessionDaoSupport 나 SqlSessionTemplate 를 사용하자. 마이바티스 스프링 연동모듈은 다른 빈에 직접 주입할 수 있는 쓰레드에 안전한 매퍼를 생성할 수 있다. -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="configLocation" value="${sqlmap.location}" />
	</bean>

	<bean id="dataSourceSpied" class="org.apache.commons.dbcp.BasicDataSource"
		destroy-method="close">
		<property name="driverClassName" value="${db.Driver}"/>
		<property name="url" value="${db.Url}"/>
		<property name="username" value="${db.Username}"/>
		<property name="password" value="${db.Password}"/>
	</bean>
	
	<bean id="dataSource" class="net.sf.log4jdbc.Log4jdbcProxyDataSource">
		<constructor-arg ref="dataSourceSpied" />
		<property name="logFormatter">
			<bean class="net.sf.log4jdbc.tools.Log4JdbcCustomFormatter">
				<property name="loggingType" value="MULTI_LINE" />
<!-- 				<property name="margin" value="19" /> -->
				<property name="sqlPrefix" value="SQL::: " />
			</bean>
		</property>
	</bean>

	<tx:advice id="txAdvice" transaction-manager="txManager">
		<tx:attributes>
			<tx:method name="get*" read-only="true" />
			<tx:method name="find*" read-only="true" />
			<tx:method name="view*" read-only="true" />
			<tx:method name="save*" propagation="REQUIRED" />
			<tx:method name="*" propagation="REQUIRED" />
		</tx:attributes>
	</tx:advice>

	<bean id="txManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>
	
	
<!-- 	<bean id="SqlMapClientTemplate" class="org.springframework.orm.ibatis.SqlMapClientTemplate"> -->
<!-- 		<property name="sqlMapClient" ref="sqlMapClient"/> -->
<!-- 	</bean> -->


</beans> 